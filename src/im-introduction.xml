<?xml version="1.0" encoding="UTF-8" ?>
<chapter xml:id="im-introduction">
<title>Introduction</title>
<introduction><p>Applied Discrete Structures is primarily designed for use in a one or two semester course in discrete mathematics.</p>

<p>At UMass Lowell, a primary purpose of this course is to assist students to develop their ability to <q>think for themselves,</q> to steer them toward reading basic definitions and theorems before and during their attempts at the exercises. Chapters 1 and 2 give the students an informal background in sets and combinatorics. A formal treatment of logic (Chapter 3) introduces the student to proofs. One of the main purposes of Chapter 4, More on Sets, is to give the students immediate practice of the concepts covered in logic. Of course this practice with proofs continues in all subsequent chapters. Our purpose is not to prove every fact encountered in each chapter, but to make students comfortable enough with proofs that they will have the mathematical foundations to pursue more advanced work in their disciplines. The instructor will find that the question "Why?" appears frequently throughout the text. We hope that this will make the student stop, reflect and ask themselves the same question. Our general approach to using the text has been not to try to cover every topic, but to cover as many topics as possible well. A detailed chapter by chapter discussion will follow.</p> 
</introduction>
<section><title>Suggested Coverage Times</title>
<subsection><title>Two Semester Sequence</title>
<p>We teach a two-semester sequence to computer science majors. Based on a semester of 45 lecture hours, we suggest the following approximate coverage times. For each semester, we assume that 5 hours will be used in examinations and review classes, leaving cover the material as you see fit.</p>
<p>With our location in the New England, weather is often an outside factor in our courses, particularly in the winter months.  Videos that present key topics that students can view during a storm are very useful keep the course on schedule.</p>           
<sidebyside>
<table><title>First Semester</title>
<tabular>
<row><cell>Chapter</cell><cell>Hours</cell></row>
<row><cell>1</cell><cell>2</cell></row>

<row><cell>2</cell><cell>4</cell></row>
<row><cell>3</cell><cell>7</cell></row>
<row><cell>4</cell><cell>3</cell></row>
<row><cell>5</cell><cell>3</cell></row>
<row><cell>6</cell><cell>4</cell></row>
<row><cell>7</cell><cell>4</cell></row>
<row><cell>8</cell><cell>5</cell></row>
<row><cell>9</cell><cell>7</cell></row>
</tabular>
</table>
<table><title>Second Semester</title>
<tabular>
<row><cell>Chapter</cell><cell>Hours</cell></row>
<row><cell>10</cell><cell>4</cell></row>
<row><cell>11</cell><cell>9</cell></row>
<row><cell>12</cell><cell>7</cell></row>
<row><cell>13</cell><cell>7</cell></row>
<row><cell>14, 15, 16</cell><cell>Partial coverage<br/> with 13 hours</cell></row>
</tabular>
</table>
</sidebyside>
</subsection>
<subsection><title>One semester courses</title>
<p>
If you offer a one semester course, there are several approaches that can be taken. We list a few of these with suggested coverage times in the following table.</p>
<table><title>Possible One Semester Courses</title>
<tabular><row><cell>Chapter</cell><cell>Non-Algebraic</cell><cell>Advanced</cell><cell>Applied Algeba</cell></row>
<row><cell>1</cell><cell>1</cell><cell>-</cell><cell>1</cell></row>
<row><cell>2</cell><cell>2</cell><cell>2</cell><cell>1</cell></row>
<row><cell>3</cell><cell>6</cell><cell>6</cell><cell>-</cell></row>
<row><cell>4</cell><cell>-</cell><cell>-</cell><cell>1</cell></row>
<row><cell>5</cell><cell>4</cell><cell>-</cell><cell>-</cell></row>
<row><cell>6</cell><cell>4</cell><cell>3</cell><cell>3</cell></row>
<row><cell>7</cell><cell>-</cell><cell>3</cell><cell>3</cell></row>
<row><cell>8</cell><cell>12</cell><cell>9</cell><cell>1</cell></row>
<row><cell>9</cell><cell>7</cell><cell>7</cell><cell>-</cell></row>
<row><cell>10</cell><cell>4</cell><cell>4</cell><cell>-</cell></row>
<row><cell>11</cell><cell>-</cell><cell>-</cell><cell>8</cell></row>
<row><cell>12</cell><cell>-</cell><cell>-</cell><cell>-</cell></row> 
<row><cell>13</cell><cell>-</cell><cell>6</cell><cell>5</cell></row>
<row><cell>14</cell><cell>-</cell><cell>-</cell><cell>5</cell></row>
<row><cell>15</cell><cell>-</cell><cell>-</cell><cell>6</cell></row>
<row><cell>16</cell><cell>-</cell><cell>-</cell><cell>6</cell></row>
<row><cell>Exams and<br/> Review</cell><cell>5</cell><cell>5</cell><cell>5</cell></row>
<row><cell>Total</cell><cell>45</cell><cell>45</cell><cell>45</cell></row>
</tabular>
</table>
</subsection>
</section>

<section><title>Chapter-by-Chapter Comments</title>
<p>We have found that in a two semester sequence, most of the text can be covered, assuming one semester contains 45 lecture hours. It is essential, however, to avoid digressing from the text. There are several places where this is tempting.</p>
<p>Chapter 1: Is there a college or university where the first day of each semester is not chaotic? The material in  Chapter 1 should be covered in 2 to 2.5 class hours. Since the material in sections 1.1 and 1.2 is a review for so many students, the typical student who misses the first class is not likely to be at a severe disadvantage. In this chapter, we cover only what we feel is essential to the understanding of Chapters 2 and 3. Coverage of the remaining essential topics in set theory is completed in Chapter 4.</p>
<p>Chapter 2: This chapter is similar to Chapter 1 in that we have only covered those aspects of combinatorics that are essential to get started in covering logic and other topics. For example, we have found that without covering elementary combinatorics, students do not fully understand how to determine how many cases a truth table should contain. </p>
<p>Chapter 3: In 1986, the MAA Committee on Discrete Mathematics in the First Two Years recommended that "Adequate time should be allowed for the students to do a lot on their own: they should be solving problems, writing proofs, constructing truth tables, manipulating symbols in Boolean algebra, deciding when, if and how to use induction, recursion, proofs by contradict ion, etc." The purpose of Chapter 3 is to introduce students to the logic of proofs. The sections on mathematical systems (3.5) and induction (3.7) are likely places where digressions can occur. The first exposure to induction proofs generally leaves a typical student confused, no matter how well the topic is presented. We usually test our students on proofs that have been done in class or in the text, with only minor variations. Section 3.9 is an overview of methods of proof. The discussion of methods of proof is continued in Chapter 4 using sets as an immediate application. Later in the text. there are frequent opportunities for students to refine their skills with induction.</p>
<p>Chapter 4: In this chapter, direct and indirect proofs are demonstrated in set theory. One important point to make is that a proof of containment is a proof with a conditional conclusion. The student should be reminded of the discussion of such conclusions in section 3.5. Section 4.3, on minsets can be skipped if you do not anticipate covering boolean algebra.</p>
<p>Chapter 5: Our introduction to matrix algebra serves several purposes. First, it gives the students an algebraic structure to contrast with logic and set theory. Second, it allows us to introduce the relation matrix and the matrix multiplication version of relation composition in Chapter 6. Finally, most students find this chapter easier than the previous two; thus it provides a breather between the more theoretical chapters. Again, we suggest that you resist the urge to digress. Most of the points that we try to make can be made with two by two matrices. Instructors who wish to give their students more practice with this material can cover sections 12.1 and 12.2 on solving systems of equations and matrix inversion.</p>
<p>Chapter 6: The development of general concepts that apply to relations is the first step in introducing the idea of an algebraic system. In addition, we introduce directed graphs as visualization of relations. The composition of relations can be a relatively difficult idea for many students to grasp.  This makes the relation matrix representation even more significant to the student since compositions can then be computed. One aspect of the relation properties that our students have a difficult time with is the situation where the condition of an implication such as the one that defines antisymmetry is never true. An example of this situation is when answering the question "Is <m>r =\emptyset</m> antisymmetric?"  These "vacuous" cases should be pointed out. Another case that should be brought to the students' attention is that a relation on a two element set can be transitive. The fact that the definition of transitivity involves three variables leads many students to conclude that you need three distinct elements. In general, the main difficulties that our students have in this chapter relates to the integration of relation concepts and concepts in logic.</p>
<p>Chapter 7: The essential concepts of function theory are introduced in this chapter. All of it is routine material that must be understood in order to continue in this text. The machine analogy for describing functions can be continued to a greater extent in lectures, particularly in discussing inverses. </p>
<p>Chapter 8: In the first section of this chapter, we formalize the concept of recursion and establish its connection with induction proofs. We suggest that this first section be given as a reading assignment. The remainder of Chapter 8 is devoted to the topic of recurrence relations and their solution. Sections 8.3, 8.4, and 8.5 are independent of one another and coverage can be reduced according to your students' needs and background. For example, analysis of the binary search and merge sort algorithms  are commonly covered in a first computer science course; therefore, we omit much of section 8.4. We frequently cover just the first three sections of this chapter in order to finish Chapter 9 in the first semester.</p>
<p>Chapter 9: After a brief introduction to the topic, we usually assign the first two sections of Chapter 9 as a reading assignment. Two topics in Section 9.1 that could be discussed in an initial class are tournament graphs and isomorphic graphs. Most of the remainder of this section should be quite readable to the typical student. Section 9.2, on data structures for graphs, may be omitted if your students will have a data structures course or if they are not computer science majors. In any event, avoid spending too much time in this section. The remaining sections are independent of one another. Our experience is that students will have little difficulty in understanding most of this chapter. The main exception seems to be the integration of logic into graph theory. This is particularly true for induction proofs,  which are generally more difficult since they do not always involve a formula.</p>
<p>Chapter 10: The extent to which this chapter should be covered depends on the order in which students take their discrete mathematics and data structures courses. Coverage time can be decreased by at least one half if the students have been exposed to trees in data structures.</p>
<p>Chapter 11: The main objective of this chapter is to introduce the concept of an algebraic system at the three levels that are introduced in Section 11.2: concrete, axiomatic, and universal. At the universal level, our goals are modest. By the end of the chapter, students should be prepared to anticipate and be able to define the axiomatic versions of subsystem. direct product, and isomorphism for vector spaces, boolean algebras, monoids, and rings. A second objective of the chapter is to begin an introduction to groups, which is continued in Chapter 15.  The remaining five chapters are independent of one another and any subset of them can be covered in any order. The order in which they appear is, in our opinion, according to their importance for computer science majors. A case could be made for virtually any ordering of the topics.</p>
<p>Chapter 12. We have assumed that a student using his book has not taken a course in linear algebra. This chapter provides a <q>minimal survival kit</q> in linear algebra that student should find useful until they can take a full semester of linear algebra. </p>
<p>Chapter 13: Due to the fact that many computer science majors take a logic design course early in their studies, boolean algebras are often familiar to them. The content of this chapter is quite different from anything they may have seen in their logic design course: therefore, the descision to cover this chapter should not be make soley on the existence of a logic design course in your students program of studies. <!-- The last section of this chapter does present an overview of the content of a logic design course. --></p>
<p>Chapter 14: This chapter establishes the connection between two central topics in computer science, formal language theory and finite-state machines. Elementary monoid theory is used to establish the link. This chapter presumes no prior knowledge of formal languages and finite-state machines and is meant to be a very elementary introduction to preceed a complete course in automata theory. For this reason, we suggest that you keep the discussion as simple as possible by using basic examples such as the ones in the text.  Our only objective here is to make later exposure to the topics easier. Finite-state machines seem to hold the interest of many students.  </p>
<p>Chapter 15: Our objective in this chapter is to present those aspects of group theory that are likely to be applicable to the student in computer science and related fields. In covering these topics, we have had one objective in mind - that the student obtain a working knowledge of the topics. For example, being able to list the cosets of a subgroup is more important than being able to prove a theorem on normal subgroups at this level. As is typical in mathematics, many exposures to a topic are needed to obtain a complete understanding of it. We hope that the student will be encouraged at being able to accomplish these modest goals to pursue further study in abstract algebra. </p>
<p>Chapter 16: Our comments on Chapter 15 apply to this chapter as well. </p>
<p>Appendicies on algorithms, determinants and Python/SageMath are included for student who want further background. 
</p>
</section>
</chapter>